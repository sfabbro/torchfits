[build-system]
requires = ["setuptools>=64.0", "wheel", "torch>=2.0.0"]
build-backend = "setuptools.build_meta"

[project]
name = "torchfits"
version = "0.2.0"
authors = [
    {name = "Seb Fabbro", email = "sebfabbro@gmail.com"},
]
description = "A fast FITS reader for PyTorch"
readme = "README.md"
requires-python = ">=3.10,<3.14"
license = "GPL-2.0-only"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research", 
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: C++",
    "Topic :: Scientific/Engineering :: Astronomy",
    "Topic :: Scientific/Engineering :: Physics",
]
dependencies = [
    "torch>=2.0.0,<3"
]

[project.urls]
Homepage = "https://github.com/sfabbro/torchfits"
Issues = "https://github.com/sfabbro/torchfits/issues"
Documentation = "https://github.com/sfabbro/torchfits/blob/main/README.md"

[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "pre-commit>=2.0.0",
    "pip>=21.0.0",
    "numpy>=1.20.0",
    "astropy>=5.0.0",
    "fitsio>=1.1.0",
    "black>=23.0.0",
    "isort>=5.0.0",
    "mypy>=1.0.0",
    "build>=0.10.0"
]

examples = [
    "matplotlib",
    "fsspec"
]

remote = [
    "fsspec"
]

dataframe = [
    "pytorch-frame"
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra"
testpaths = ["tests"]

[tool.black]
line-length = 88
target-version = ['py312']

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pixi.workspace]
channels = ["conda-forge"]
platforms = ["osx-arm64", "linux-64", "linux-aarch64"]

[tool.pixi.pypi-dependencies]
torchfits = { path = ".", editable = true }

[tool.pixi.environments]
default = { solve-group = "default" }
dev = { features = ["dev"], solve-group = "default" }
examples = { features = ["examples"], solve-group = "default" }
remote = { features = ["remote"], solve-group = "default" }

[tool.pixi.tasks]
test = { cmd = "pytest" }
build = { cmd = "pip install -e ." }
lint = { cmd = "pre-commit run --all-files" }
format = { cmd = "black src tests examples && isort src tests examples" }
dev-setup = { cmd = "pip install -e '.[dev]' && pre-commit install" }

[tool.pixi.dependencies]
pytorch = ">=2.7.1,<3"
cfitsio = ">=4.6.2,<5"
wcslib = ">=8.2.2,<9"
fitsio = ">=1.2.6,<2"
numpy = ">=2.3.2,<3"
astropy = ">=7.1.0,<8"
clang = ">=20.1.8,<21"
pytest = ">=8.4.1,<9"
pip = ">=25.1.1,<26"
tqdm = ">=4.67.1,<5"
requests = ">=2.32.4,<3"
pytorch-frame = ">=0.2.5,<0.3"
black = ">=25.1.0,<26"
isort = ">=6.0.1,<7"
mypy = ">=1.17.1,<2"
pyarrow = ">=21.0.0,<22"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
torchfits = ["*.so", "*.pyd"]
